p
p2 <- p + geom_jitter(size = 0.1, alpha = 0.1, width = 0.4) +
theme_minimal() +
scale_fill_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350"))
p2
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_violin(trim = TRUE, coef=1e30) + scale_y_log10()
p
p2 <- p + geom_jitter(size = 0.1, alpha = 0.1, width = 0.4) +
theme_minimal() +
scale_fill_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350"))
p2
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_violin(trim = TRUE, trim=TRUE) + scale_y_log10()
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_violin(trim = TRUE) + scale_y_log10()
p
p2 <- p + geom_jitter(size = 0.1, alpha = 0.1, width = 0.4) +
theme_minimal() +
scale_fill_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350"))
p2
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_violin(trim = FALSE) + scale_y_log10()
p
p2 <- p + geom_jitter(size = 0.1, alpha = 0.1, width = 0.4) +
theme_minimal() +
scale_fill_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350"))
p2
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_violin(trim = TRUE) + scale_y_log10()
p
p2 <- p + geom_jitter(size = 0.1, alpha = 0.1, width = 0.4) +
theme_minimal() +
scale_fill_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350"))
p2
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_violin(trim = TRUE) + scale_y_log10()
p
p2 <- p + geom_jitter(size = 0.1, alpha = 0.1, width = 0.4) +
theme_minimal() +
scale_fill_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350"))
p2
p <- ggplot(daily_downloads, aes(x = machineName, y = size_mb, fill=machineName)) +
geom_violin(trim = TRUE) + scale_y_log10()
p
daily_downloads <- downloads %>%
group_by(machineName, date) %>%
summarize(dl_count = n(), size_mb = sum(size)/10^6) %>%
mutate(total_dl_count = cumsum(dl_count))
daily_downloads
View(daily_downloads)
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_violin(trim = TRUE) + scale_y_log10()
p
p2 <- p + geom_jitter(size = 0.1, alpha = 0.1, width = 0.4, trim=TRUE) +
theme_minimal() +
scale_fill_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350"))
p2
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_violin(trim = TRUE) + scale_y_log10()
p
p2 <- p + geom_jitter(size = 0.1, alpha = 0.1, width = 0.4) +
theme_minimal() +
scale_fill_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350"))
p2
daily_downloads <- downloads %>%
group_by(machineName, date) %>%
summarize(dl_count = n(), size_mb = sum(size)/10^6) %>%
mutate(total_dl_count = cumsum(dl_count))
daily_downloads
p <- ggplot(daily_downloads, aes(x = date, y = dl_count)) +
geom_point()
p <- p + scale_y_log10()
p
getwd()
getwd()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(readxl)
library(tidyverse)
#Set the working directory to the FromExceltoR folder
my_path<-gsub("/for_teachers.*","",getwd())
setwd(my_path)
path <- "Presentations/data/"
downloads <-
read_excel(paste0(path,"downloads.xlsx")) %>%
filter(size > 0)
downloads
dl_sizes <- downloads %>%
group_by(machineName) %>%
summarise(size = sum(size))
ggplot(dl_sizes,aes(x=machineName,y=size))
ggplot(dl_sizes, aes(x = machineName, y = size/10^6)) +
geom_col()
dl_sizes <- dl_sizes %>%
arrange(size)
dl_sizes
dl_sizes$machineName
dl_sizes <- dl_sizes %>%
mutate(machineName = factor(machineName, levels = dl_sizes$machineName))
dl_sizes$machineName
ggplot(dl_sizes, aes(x = machineName, y = size/10^6)) +
geom_col()
p <- ggplot(dl_sizes, aes(x = machineName, y = size/10^6)) +
geom_col()
p + coord_flip()
dl_sizes_month <- downloads %>%
group_by(machineName, month) %>%
summarise(size = sum(size)) %>%
arrange(size) %>%
mutate(machineName = factor(machineName, levels = dl_sizes$machineName))
p <- ggplot(dl_sizes_month, aes(x = machineName, y = size/10^6, fill = month))
p +  geom_col()
p + geom_col(position = "dodge") ## Left/first plot
p + geom_col(position = "fill") ## Right/second plot
p +  geom_col() + facet_grid(vars(month))
p +  geom_col() + facet_wrap(vars(month))
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_boxplot() +
scale_y_log10()
p
p1 <- ggplot(downloads, aes(x = machineName, y = size, groups = month, fill=month)) +
geom_boxplot()
p1 <- p1 + scale_y_log10()
p1
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_violin(trim = TRUE) + scale_y_log10()
p
p2 <- p + geom_jitter(size = 0.1, alpha = 0.1, width = 0.4) +
theme_minimal() +
scale_fill_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350"))
p2
daily_downloads <- downloads %>%
group_by(machineName, date) %>%
summarize(dl_count = n(), size_mb = sum(size)/10^6) %>%
mutate(total_dl_count = cumsum(dl_count))
daily_downloads
p <- ggplot(daily_downloads, aes(x = date, y = dl_count)) +
geom_point()
p <- p + scale_y_log10()
p
p + aes(color = machineName)
p + aes(shape = machineName)
>p + aes(shape = factor(size_mb))
p + aes(size = size_mb)
p + aes(size = size_mb, color = size_mb > 2)
p3 <- p + aes(size = size_mb, color = size_mb > 2)
ggplot(daily_downloads, aes(x = date, y = total_dl_count)) +
geom_line()
p4 <- ggplot(daily_downloads, aes(x = date, y = total_dl_count)) +
geom_line(aes(group = machineName, colour = machineName))
p4
# install.packages("ggpubr")
library(ggpubr)
figure <- ggarrange(p1, p2, p3, p4,
ncol = 2, nrow = 2)
figure
figure <- ggarrange(p1 + theme_bw(),
p3 + theme_bw() +
scale_color_manual(values=c("#2A2D43", "#91A6FF", "#AD8350")),
p4 + theme_bw()+
scale_color_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350")),
p2 + theme_bw(),
align = "hv",
labels = c ("A", "B", "C", "D"),
ncol = 2, nrow = 2)
figure
## Save Tibble and Save Plot:
#write_xlsx(daily_downloads, "daily_downloads.xlsx")
#ggsave(filename = "vionlinPlot.pdf", plot = p2, height = 5, width = 10)
#pdf("vionlinPlot2.pdf", height = 5, width = 10)
#p2
#dev.off()
getwd()
#Set the working directory to the FromExceltoR folder
my_path<-gsub("/for_teachers.*","",getwd())
setwd(my_path)
path <- "Presentations/data/"
downloads <-
read_excel(paste0(path,"downloads.xlsx")) %>%
filter(size > 0)
downloads
getwd()
getwd()
my_path
my_path<-gsub("/for_teachers.*","",getwd())
my_path
path <- paste0(my_path,"Presentations/data/")
path
#Set the working directory to the FromExceltoR folder
my_path<-gsub("/for_teachers.*","",getwd())
#setwd(my_path)
path <- paste0(my_path,"/Presentations/data/")
downloads <-
read_excel(paste0(path,"downloads.xlsx")) %>%
filter(size > 0)
downloads
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(readxl)
library(tidyverse)
#Set the working directory to the FromExceltoR folder
my_path<-gsub("/for_teachers.*","",getwd())
#setwd(my_path)
path <- paste0(my_path,"/Presentations/data/")
downloads <-
read_excel(paste0(path,"downloads.xlsx")) %>%
filter(size > 0)
downloads
dl_sizes <- downloads %>%
group_by(machineName) %>%
summarise(size = sum(size))
ggplot(dl_sizes,aes(x=machineName,y=size))
p + geom_col(position = "dodge") ## Left/first plot
dl_sizes_month <- downloads %>%
group_by(machineName, month) %>%
summarise(size = sum(size)) %>%
arrange(size) %>%
mutate(machineName = factor(machineName, levels = dl_sizes$machineName))
p <- ggplot(dl_sizes_month, aes(x = machineName, y = size/10^6, fill = month))
p +  geom_col()
p + geom_col(position = "dodge") ## Left/first plot
p + geom_col(position = "fill") ## Right/second plot
library(readxl)
library(tidyverse)
#Set the working directory to the FromExceltoR folder
my_path<-gsub("/for_teachers.*","",getwd())
#setwd(my_path)
path <- paste0(my_path,"/Presentations/data/")
downloads <-
read_excel(paste0(path,"downloads.xlsx")) %>%
filter(size > 0)
downloads
dl_sizes <- downloads %>%
group_by(machineName) %>%
summarise(size = sum(size))
ggplot(dl_sizes,aes(x=machineName,y=size))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(readxl)
library(tidyverse)
#Set the working directory to the FromExceltoR folder
my_path<-gsub("/for_teachers.*","",getwd())
#setwd(my_path)
path <- paste0(my_path,"/Presentations/data/")
downloads <-
read_excel(paste0(path,"downloads.xlsx")) %>%
filter(size > 0)
downloads
dl_sizes <- downloads %>%
group_by(machineName) %>%
summarise(size = sum(size))
ggplot(dl_sizes,aes(x=machineName,y=size))
ggplot(dl_sizes, aes(x = machineName, y = size/10^6)) +
geom_col()
dl_sizes <- dl_sizes %>%
arrange(size)
dl_sizes
dl_sizes$machineName
dl_sizes <- dl_sizes %>%
mutate(machineName = factor(machineName, levels = dl_sizes$machineName))
dl_sizes$machineName
ggplot(dl_sizes, aes(x = machineName, y = size/10^6)) +
geom_col()
p <- ggplot(dl_sizes, aes(x = machineName, y = size/10^6)) +
geom_col()
p + coord_flip()
dl_sizes_month <- downloads %>%
group_by(machineName, month) %>%
summarise(size = sum(size)) %>%
arrange(size) %>%
mutate(machineName = factor(machineName, levels = dl_sizes$machineName))
dl_sizes_month <- downloads %>%
group_by(machineName, month) %>%
summarise(size = sum(size)) %>%
arrange(size) %>%
mutate(machineName = factor(machineName, levels = dl_sizes$machineName))
dl_sizes_month <- downloads %>%
group_by(machineName, month) %>%
summarise(size = sum(size)) %>%
arrange(size) %>%
mutate(machineName = factor(machineName, levels = dl_sizes$machineName))
p <- ggplot(dl_sizes_month, aes(x = machineName, y = size/10^6, fill = month))
p +  geom_col()
p + geom_col(position = "dodge") ## Left/first plot
p + geom_col(position = "fill") ## Right/second plot
p +  geom_col() + facet_grid(vars(month))
p +  geom_col() + facet_wrap(vars(month))
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_boxplot() +
scale_y_log10()
p
p1 <- ggplot(downloads, aes(x = machineName, y = size, groups = month, fill=month)) +
geom_boxplot()
p1 <- p1 + scale_y_log10()
p1
p <- ggplot(downloads, aes(x = machineName, y = size, fill=machineName)) +
geom_violin(trim = TRUE) + scale_y_log10()
p
p2 <- p + geom_jitter(size = 0.1, alpha = 0.1, width = 0.4) +
theme_minimal() +
scale_fill_manual(values=c("#2A2D43", "#91A6FF", "#C7EDE4", "#AFA060", "#AD8350"))
p2
daily_downloads <- downloads %>%
group_by(machineName, date) %>%
summarize(dl_count = n(), size_mb = sum(size)/10^6) %>%
mutate(total_dl_count = cumsum(dl_count))
daily_downloads
my_path<-gsub("/for_teachers.*","",getwd())
my_path
getwd()
ls
pwd
getwd()
purl("presentation3.Rmd")
library(knitr)
purl("presentation3.Rmd")
purl("presentation3.Rmd", output = "test2.R", documentation = 2)
purl("presentation3.Rmd", output = "test3.R", documentation = 1)
purl("presentation3.Rmd", output = "test0.R", documentation = 0)
purl("presentation3.Rmd", output = "test0L.R", documentation = 0L)
purl("presentation3.Rmd", output = "test2L.R", documentation = 2L)
purl("presentation3.Rmd", output = "test1L.R", documentation = 1L)
purl("presentation3.Rmd", output = "test0L.R", documentation = 0L)
purl("presentation3.Rmd", output = "test2L.R", documentation = 2L)
purl("presentation3.Rmd", output = "test1L.R", documentation = 1L)
purl("presentation3.Rmd", output = "presentation3.R", documentation = 2L)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, eval = TRUE, warning = FALSE)
library(tidyverse)
library(readxl)
getwd()
# point to the file so I can knit
my_path<-gsub("/for_teachers.*","",getwd())
#Get a path to data folder
path <- paste0(my_path,"/Exercises/data/")
#full_path <- '~/Documents/Heads_center_management/courses/excel_to_r/oct2022/FromExceltoR/Exercises/data/'
climate <- read_excel(paste0(path,"climate.xlsx"))
path
# point to the file so I can knit
my_path<-gsub("/Solutions.*","",getwd())
#Get a path to data folder
path <- paste0(my_path,"/Exercises/data/")
#full_path <- '~/Documents/Heads_center_management/courses/excel_to_r/oct2022/FromExceltoR/Exercises/data/'
climate <- read_excel(paste0(path,"climate.xlsx"))
climate
getwd()
ggplot(climate, aes(x = sun, y = rain, colour = station)) +
geom_point() +
facet_wrap(~station) +
theme_bw() +
theme(legend.position = "none")
ggsave(file="weather.jpeg")
ggsave(file="weather.png",width=10,height=8,units="cm")
getwd()
getwd()
ggsave(file="weather.jpeg")
ggsave(file="weather.png",width=10,height=8,units="cm")
#getwd()
ggsave(file="weather.jpeg")
ggsave(file="weather.png",width=10,height=8,units="cm")
summary_stats <- climate %>%
group_by(month) %>%
summarize(sun_avg = mean(sun), sun_sd = sd(sun))
p <- ggplot(summary_stats, aes(x = month, y = sun_avg)) +
geom_point() +
geom_errorbar(aes(ymin = sun_avg - sun_sd, ymax = sun_avg + sun_sd), width = 0.3)
p
p + coord_flip()
example_data <- tibble(X = 1:5, Y = 2*X, Z = letters[1:5])
example_data
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data)
ggplot() +
geom_text(mapping = aes(x = X, y = Y, label = Z), data = example_data)
ggplot() +
geom_text(mapping = aes(x = X, y = Y, label = Z), data = example_data, nudge_y = 0.3)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data)
ggplot() +
geom_text(mapping = aes(x = X, y = Y, label = Z), data = example_data)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data) +
geom_text(mapping = aes(x = X, y = Y, label = Z), data = example_data, nudge_y = 0.3)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data) +
geom_text(mapping = aes(x = X, y = Y, label = Z), data = example_data)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data) +
geom_text(mapping = aes(x = X, y = Y, label = Z), data = example_data, nudge_y = 0.3)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data) +
geom_text(mapping = aes(x = X, y = Y, label = Z), data = example_data)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data) +
geom_text(mapping = aes(x = X, y = Y, label = Z), data = example_data, nudge_y = 0.3)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data) +
geom_text(mapping = aes(x = X, y = Y, label = Z), data = example_data)
ggplot() +
geom_point(mapping = aes(x = X, y = Y), data = example_data) +
geom_text(mapping = aes(x = X, y = Y, label = Z), data = example_data, nudge_y = 0.3)
climate <- mutate(climate, month = factor(month))
ggplot(climate, aes(x = month, y = rain, group = station, colour = station)) +
geom_line() +
geom_point() +
theme(legend.position = "top") +
geom_hline(yintercept = mean(climate$rain), linetype = "dashed") +
labs(x = "Month", y = "Rainfall (mm)", colour = "Weather station")
ggplot(climate, aes(x = station, y = sun)) +
geom_boxplot(fill = "lightgreen")
ggplot(climate, aes(x = station, y = sun)) +
geom_boxplot(aes(fill = station)) +
theme(legend.position = "none")
ggplot(climate, aes(x=station, y=sun, fill=station)) +
geom_violin(trim=FALSE) +
geom_point() +
geom_boxplot(width=.1) +
scale_fill_manual(values = c("darkcyan","steelblue", "lightblue", "lavender", "pink")) +
labs(fill = "Custom Title") +
theme(legend.position="top") +
theme_minimal()
ggplot(climate, aes(x=station, y=sun, fill=station)) +
geom_violin(trim=FALSE) +
#geom_point() +
geom_boxplot(width=.1) +
scale_fill_manual(values = c("darkcyan","steelblue", "lightblue", "lavender", "pink")) +
labs(fill = "Custom Title") +
theme(legend.position="top") +
theme_minimal()
ggplot(climate, aes(x=station, y=sun, fill=station)) +
geom_violin(trim=FALSE) +
geom_point() +
geom_boxplot(width=.1) +
scale_fill_manual(values = c("darkcyan","steelblue", "lightblue", "lavender", "pink")) +
labs(fill = "Custom Title") +
theme(legend.position="top") +
theme_minimal()
ggplot(climate, aes(x=station, y=sun, fill=station)) +
geom_violin(trim=FALSE) +
geom_boxplot(width=.1) +
scale_fill_manual(values = c("darkcyan","steelblue", "lightblue", "lavender", "pink")) +
labs(fill = "Custom Title") +
theme(legend.position="top") +
theme_minimal()
ggplot(climate, aes(x=station, y=sun, fill=station)) +
geom_violin(trim=FALSE) +
geom_boxplot(width=.1) +
scale_fill_manual(values = c("darkcyan","steelblue", "lightblue", "lavender", "pink")) +
labs(fill = "Custom Title") +
theme(legend.position="top") +
theme_minimal()
ggplot(climate, aes(x = rain)) +
geom_histogram(binwidth = 25, colour = "red", fill = "orange")
ggplot(climate, aes(x = month, y = sun, fill = station)) +
geom_col() +
labs(x = "Month", y = "Sunshine (hours)", colour = "Weather station")
View(climate)
ggplot(summary_stats, aes(x = month, y = sun_avg)) +
geom_col(fill = "lightyellow") +
geom_errorbar(aes(ymin = sun_avg - sun_sd, ymax = sun_avg + sun_sd), width = 0.2)
ggplot(climate, aes(x = station, y = rain)) +
geom_col()
annual_rain <-
climate %>%
group_by(station) %>%
summarize(rain = sum(rain)) %>%
arrange(rain)
climate <- mutate(climate, station = factor(station, levels = annual_rain$station))
ggplot(climate, aes(x = station, y = rain)) +
geom_col() +
geom_label(mapping = aes(x = station, y = rain, label = rain), data = annual_rain, nudge_y = 60)
View(annual_rain)
View(annual_rain)
annual_rain <-
climate %>%
group_by(station) %>%
summarize(rain = sum(rain)) %>%
arrange(rain)
climate <- mutate(climate, station = factor(station, levels = annual_rain$station))
ggplot(climate, aes(x = station, y = rain)) +
geom_col() +
geom_label(mapping = aes(x = station, y = rain, label = rain), data = annual_rain, nudge_y = 60)
ggplot(annual_rain, aes(x = station, y = rain)) +
geom_col() +
geom_label(mapping = aes(x = station, y = rain, label = rain), data = annual_rain, nudge_y = 60)
annual_rain <-
climate %>%
group_by(station) %>%
summarize(rain = sum(rain)) %>%
arrange(rain)
ggplot(annual_rain, aes(x = station, y = rain)) +
geom_col() +
geom_text(mapping = aes(x = station, y = rain, label = rain), data = annual_rain, nudge_y = 60)
ggplot(annual_rain, aes(x = station, y = rain)) +
geom_col() +
geom_label(mapping = aes(x = station, y = rain, label = rain), data = annual_rain, nudge_y = 60)
annual_rain <-
climate %>%
group_by(station) %>%
summarize(rain = sum(rain)) %>%
arrange(rain)
annual_rain <- mutate(annual_rain, station = factor(station, levels = annual_rain$station))
ggplot(annual_rain, aes(x = station, y = rain)) +
geom_col() +
geom_text(mapping = aes(x = station, y = rain, label = rain), data = annual_rain, nudge_y = 60)
ggplot(annual_rain, aes(x = station, y = rain)) +
geom_col() +
geom_label(mapping = aes(x = station, y = rain, label = rain), data = annual_rain, nudge_y = 60)
